{
  "hash": "7f9e8ca31353cceab7c267c33c028106",
  "result": {
    "markdown": "# Diagnostics {#sec-diag}\n\nIn this Chapter, we will take a look at each of the assumptions in a linear model. We will discuss what tools you will use to assess these assumptions, how to diagnose if the assumptions are met, some common problems often encountered when these assumptions do not hold and finally some remedies to fix these common issues. You will notice that a variety of data sets are used throughout this Chapter. This is to help visualize and test for various assumptions and how to identify when these assumptions are not met.\n\n<ul>This Chapter aims to answer the following questions:</ul>\n\n<li>\n\nHow to use residuals from a multiple linear regression model to assess the assumptions.\n\n</ul>\n\n<ul>\n\n<li>\n\nDoes the mean of the response have a linear pattern in the explanatory variables?\n\n<li>\n\nDo the residuals have a constant variance?\n\n<li>\n\nAre the residuals normally distributed?\n\n<li>\n\nAre the residuals independent?\n\n</ul>\n\n<li>\n\nHow to identify potential outliers and influential points.\n\n</ul>\n\n<li>\n\nHow to identify potential multicolliearity.\n\n<ul>\n\nIn multiple linear regression, the assumptions are as follows:\n\n1.  The mean of the Y's is accurately modeled by a linear function of the X's.\\\n2.  The random error term, $\\varepsilon$, is assumed to have a normal distribution with a mean of zero.\\\n3.  The random error term, $\\varepsilon$, is assumed to have a constant variance, $\\sigma^{2}$.\\\n4.  The errors are independent.\\\n5.  No perfect collinearity.\\\n\nBefore exploring the assumptions of a linear model, it is always good to visually take a look at your data (if it is not too large). The `pairs` command in R allows you to look at all scatterplots between the variables in a data set.\n\nTo illustrate this, we will use the Salaries data set in the package carData in R that has 397 observations of salaries for professors. The explanatory variables include:\n\n<ul>\n\n<li>\n\n*rank*: a factor with levels AssocProf, AsstProf, Prof\n\n<li>\n\n*discipline*: a factor with levels A (\"theoretical\" departments) or B (\"applied\" departments)\n\n<li>\n\n*yrs.since.phd*: years since PhD\n\n<li>\n\n*yrs.service*: years of service\n\n<li>\n\n*sex*: a factor with levels Female and Male\n\n<li>\n\n*salary*: nine-month salary, in dollars\n\n</ul>\n\nUsing this data set, let's take a look at the relationship between each pair of variables in Figure @fig-pairsex.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n\n```{.r .cell-code}\nlibrary(carData)\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(grid)\nlibrary(lattice)\nlibrary(nortest)\nlibrary(MASS)\nlibrary(TSA)\nlibrary(lmtest)\nlibrary(car)\npairs(Salaries)\n```\n\n::: {.cell-output-display}\n![Matrix of Scatter Plots for the Salaries Data](05-diagnostics_files/figure-html/fig-pairsex-1.png){#fig-pairsex fig-align='center' width=672}\n:::\n:::\n\n\nIf there are not too many variables, this plot is a nice way to see all the relationships in the data set. The variables are listed along the diagonal and each off diagonal plot is a scatterplot of the variables represented by that row and column. For example, the first row of plots have rank on the y-axis. The first column of plots have rank along the x-axis.\n\n## Examining Residuals\n\nAs you can see from the above list of assumptions that most of them involve the error term which is estimated by the residuals. We will be using the residuals for many of these diagnostics. One of the most useful plot is referred as the residual plot. This plot will have the residuals along the y-axis and either the predicted values or individual x-values along the x-axis. Figure \\ref@(fig:salresid) is an example using the residuals from a linear model predicting salary using all of the explanatory variables.\n\n\n::: {.cell fig='true'}\n\n```{.r .cell-code}\nlm.model=lm(salary~.,data=Salaries)\n\nggplot(lm.model,aes(x=fitted(lm.model),y=resid(lm.model)))+geom_point(color=\"blue\")+labs(x=\"Predicted Values\",y=\"Residuals\")\n```\n\n::: {.cell-output-display}\n![Residuals vs. Predicted Values for Salary Model](05-diagnostics_files/figure-html/salresid-1.png){width=672}\n:::\n:::\n\n\n## Misspecified Model\n\nOne of the assumptions assumes that the expected value of the response is accurately modeled by a linear function of the explanatory variables. If this is true, then we would expect our residual plots to be random scatter (in other words, all of the \"signal\" was correctly captured in the model and there is just noise left over).\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Ideal residual plot showing residual values randomly distributed with equal variance](05-diagnostics_files/figure-html/fig-correctspec-1.png){#fig-correctspec width=672}\n:::\n:::\n\n\nLooking at the plot in Figure @fig-correctspec, we see that there is no pattern. If you did see some type of pattern in this residual plot, it would indicate that you are missing something and need to do some more modeling. For example, a quadratic shape or curvilinear pattern to the residuals would indicate that one of our input variables has a nonlinear relationship to the response and transformations should be made to that input accordingly. For example, a residual scatter plot like Figure @fig-quadpattern would prompt us to consider a quadratic term.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n::: {.cell-output-display}\n![Residual plot indicating that a quadratic term is required](05-diagnostics_files/figure-html/fig-quadpattern-1.png){#fig-quadpattern fig-align='center' width=672}\n:::\n:::\n\n\nIf your model has more than one x, it is easier to see if an individual input variable has a quadratic relationship with the response when looking at plots like Figure @fig-quadpattern where the input variable is on the x-axis.\n\n**Example**\n\nLet's take a look at an example of where a quadratic linear regression is needed. This example is studying the effect of a chemical additive on paper strength. The response variable is the amount of force required to break the paper (strength) and the explanatory variable is the amount of chemical additive (amount).\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n\n```{.r .cell-code}\n amount=c(1,1,1,2,2,2,2,2,3,3,3,3,4,4,4,4,4,5,5,5,5,5)\n strength=c(2.4,2.6,2.7,2.5,2.6,2.6,2.7,2.8,2.8,2.8,3.0,3.0,3.0,2.9,2.9,3.0,3.1,2.9,2.9,3.0,2.9,2.8)\n lm.quad=lm(strength~amount)\n summary(lm.quad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = strength ~ amount)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.199780 -0.091850  0.004185  0.101707  0.206167 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.50176    0.06920  36.154  < 2e-16 ***\namount       0.09802    0.01998   4.907 8.52e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1283 on 20 degrees of freedom\nMultiple R-squared:  0.5462,\tAdjusted R-squared:  0.5236 \nF-statistic: 24.08 on 1 and 20 DF,  p-value: 8.518e-05\n```\n:::\n\n```{.r .cell-code}\n ggplot(lm.quad,aes(x=amount,y=resid(lm.quad)))+geom_point(color=\"blue\",size=3)+labs( x=\"Amount\", y=\"Residuals\")\n```\n\n::: {.cell-output-display}\n![Residual Plot Showing a Quadratic Relationship](05-diagnostics_files/figure-html/quadexample1-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nThe above fitted model is $$\\hat{Y}_{i} = 2.5 + 0.1x_{i}.$$ However, after looking at the residual plot and noticing the quadratic shape, we realize that we need a higher order term for amount.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n\n```{.r .cell-code}\nlm.quad=lm(strength~amount + I(amount^2))\n\nsummary(lm.quad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = strength ~ amount + I(amount^2))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.22276 -0.06562 -0.02763  0.07602  0.19466 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.21334    0.13399  16.519 9.97e-13 ***\namount       0.32928    0.09690   3.398  0.00302 ** \nI(amount^2) -0.03728    0.01535  -2.428  0.02526 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.115 on 19 degrees of freedom\nMultiple R-squared:  0.6537,\tAdjusted R-squared:  0.6173 \nF-statistic: 17.93 on 2 and 19 DF,  p-value: 4.212e-05\n```\n:::\n\n```{.r .cell-code}\nggplot(lm.quad,aes(x=amount,y=resid(lm.quad)))+geom_point(color=\"orange\",size=2)+labs(title=\"Residual plot\", x=\"Amount\", y=\"Residuals\")\n```\n\n::: {.cell-output-display}\n![New Residual Plot after Fitting a Quadratic Term](05-diagnostics_files/figure-html/fig-quadexample2-1.png){#fig-quadexample2 fig-align='center' width=672}\n:::\n:::\n\n\nThe second order polynomial model is $$\\hat{Y}_{i} = 2.21 + 0.33x_{i}-0.04x^{2}_{i}$$ and the residuals from this model are shown in Figure @fig-quadexample2. If you think there might still be some pattern in Figure @fig-quadexample2, you could try a third degree polynomial:\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n\n```{.r .cell-code}\nlm.3=lm(strength~amount+I(amount^2)+I(amount^3))\n\nsummary(lm.3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = strength ~ amount + I(amount^2) + I(amount^3))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.15941 -0.06360  0.00272  0.08579  0.14142 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.73280    0.26060  10.487 4.28e-09 ***\namount      -0.36900    0.32208  -1.146   0.2669    \nI(amount^2)  0.22339    0.11651   1.917   0.0712 .  \nI(amount^3) -0.02862    0.01270  -2.254   0.0369 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1044 on 18 degrees of freedom\nMultiple R-squared:  0.7299,\tAdjusted R-squared:  0.6849 \nF-statistic: 16.22 on 3 and 18 DF,  p-value: 2.344e-05\n```\n:::\n\n```{.r .cell-code}\nggplot(lm.3,aes(x=amount,y=resid(lm.3)))+geom_point(color=\"orange\",size=2)+labs(x=\"Amount\", y=\"Residuals\")\n```\n\n::: {.cell-output-display}\n![New Residual Plot after Fitting a Cubic Term](05-diagnostics_files/figure-html/fig-quadexample3-1.png){#fig-quadexample3 fig-align='center' width=672}\n:::\n:::\n\n\nThe new regression equation is now $$\\hat{Y}_{i} = 2.73 - 0.37x_{i}+0.22x^{2}_{i}-0.03x^{3}_{i}.$$\n\nIn wrapping up the misspecified model, if a linear model does not look appropriate (there is a pattern in the residual plot), then you can try the following remedies:\n\n1.  Fit a polynomial or more complex regression model.\\\n2.  Transform the dependent and/or independent variables to obtain linearity.\\\n3.  Fit a nonlinear regression model, if appropriate (will need to decide the shape of a nonlinear model).\\\n4.  Fit a nonparametric regression model (for example splines or a LOESS regression).\\\n\n## Constant Variance\n\nAnother assumption for linear regression is that the variance is constant about the line. Looking at Figure @fig-constvar, you see that the variation about the line is constant across the line (notice the bands that have been drawn around the line).\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![Residual Plot Showing Non-Constant Variance](05-diagnostics_files/figure-html/fig-constvar-1.png){#fig-constvar fig-align='center' width=672}\n:::\n:::\n\n\nHowever, an example of where this is not true is shown in Figure @fig-nonconstvar.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n::: {.cell-output-display}\n![Residual Plot Showing Non-Constant Variance](05-diagnostics_files/figure-html/fig-nonconstvar-1.png){#fig-nonconstvar fig-align='center' width=672}\n:::\n:::\n\n\nNotice how the variability increases as the predicted values increase (the bands get wider). This is referred to as heteroskedasticity in the variance, which violates the constant variance assumption (homoskedasticity). The homoskedastic assumption is about the regression line, so it is best to look at the plot of residuals versus predicted values (not individual x-values). There are a few tests for this assumption, but they are limited in what they are able to test. Best way to evaluate this assumption is by visualizing the residual plot and make a judgement call. If the variance appears to be heteroskadastic, any inferences under the traditional assumptions will be incorrect. In other words, hypothesis tests and confidence intervals based on the t, F, and $\\chi^{2}$ distributions will not be valid.\n\n**Example**\n\nThe following fictious salary data set is from the online textbook [*Applied Statistics with R*](https://daviddalpiaz.github.io/appliedstats/index.html). The explanatory variable is number of years employment and the response variable is annual salary.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n\n```{.r .cell-code}\nyears=c(1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25)\n\nsalary=c(41504,32619,44322,40038,46147,38447,38163,42104,25597,39599,55698,47220,65929,55794,45959,52460,60308,61458,56951,56174,59363,57642,69792,59321,66379,64282,48901,100711,59324,54752,73619,65382,58823,65717,92816,72550,71365,88888,62969,45298,111292,91491,106345,99009,73981,72547,74991,139249,119948,128962,98112,97159,125246,89694,73333,108710,97567,90359,119806,101343,147406,153020,143200,97327,184807,146263,127925,159785,174822,177610,210984,160044,137044,182996,184183,168666,121350,193627,142611,170131,134140,129446,201469,202104,220556,166419,149044,247017,247730,252917,235517,241276,197229,175879,253682,262578,207715,221179,212028,312549)\n\nlm.var=lm(salary~years)\n\nggplot(lm.var,aes(x=fitted(lm.var),y=resid(lm.var)))+geom_point(color=\"blue\")+labs(title=\"Residual Plot\", x=\"Predicted Values\",y=\"Residuals\")\n```\n\n::: {.cell-output-display}\n![Residuals With Heteroskedasticity](05-diagnostics_files/figure-html/fig-varexample-1.png){#fig-varexample fig-align='center' width=672}\n:::\n:::\n\n\nAs you can see from the residual plot in Figure@fig-varexample, the graph exhibits a fan-shape and the variance is increasing as the predicted values get larger. We can apply a logarithmic transform to try to stabilize the variance, the result of which is shown in Figure@fig-correctexam.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n::: {.cell-output-display}\n![Residual Plot Showing Stabilized Variance after Log Transform](05-diagnostics_files/figure-html/fig-correctexam-1.png){#fig-correctexam fig-align='center' width=672}\n:::\n:::\n\n\nThe log transform stabilized the variance and produces a better residual plot.\n\nIf the assumption of Homoskadicity of variance is violated, there are a few remedies you can try: 1. Use Weighted Least Squares (WLS) or iteratively reweighted least squares (IRLS).\\\n2. Transform data.\\\n3. Use a different distribution (for example if the response is count data, use Poisson distribution).\\\n\n## Normality\n\nAnother assumption is that the residuals are normally distributed. We can test this assumption through use of visual aids or formal hypothesis tests. visual aids include a histogram of the residuals or Q-Q plot of residuals. A few tests of normality of residuals, include (but not limited to) Shapiro-Wilk, Anderson-Darling, Kolmogorov-Smirnov tests. In addition to the base R package, you should also install and library the nortest package.\n\n**Visualization**\n\nTo visually inspect whether or not the residuals are normally distributed, we can either graph the historgram of residuals or create a Q-Q plot of the residuals. In the histogram, we are looking for a bell-shaped curve and in the Q-Q plot, we are looking for a straight line.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `qplot()` was deprecated in ggplot2 3.4.0.\n```\n:::\n\n::: {.cell-output-display}\n![Histogram and Q-Q Plot of Residuals](05-diagnostics_files/figure-html/normalvis-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n**Formal Hypothesis tests**\n\nYou can also run a formal hypothesis test. The hypotheses are\\\n$H_{0}:$ Residuals are normally distributed\\\n$H_{A}:$ Residuals are not normally distributed.\n\nThere are MANY different tests for normality. Only two will be covered here.\n\n1.  Anderson-Darling is based on the empirical cumulative distribution function of the data and gives more weight to the tails.\\\n2.  Shapiro-Wilk test uses the idea of correlation between the sample data and normal scores. The Shapiro-Wilk is better for smaller data sets.\n\nWith large samples, you will most likely end up rejecting these hypothesis tests (using corrected significance levels is recommended). Keep in mind that you can also get different result from different tests. It is up to you to make the decision on whether or not you are comfortable in the assumption for normality holding in different situations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(55402)\nx=rnorm(1000,0,4)\nad.test(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAnderson-Darling normality test\n\ndata:  x\nA = 0.30275, p-value = 0.5742\n```\n:::\n\n```{.r .cell-code}\nshapiro.test(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  x\nW = 0.99889, p-value = 0.814\n```\n:::\n:::\n\n\nUsing a simulated data set (so the \"TRUE\" distribution is actually normal indicating that we should \"Fail to reject\" the null hypothesis). The p-values from both of these test illustrate that they would indicate the distribution is not significantly different from normal (which it should).\n\n**Box-cox Transformation**\n\nIf the residuals are not normally distributed, one solution is to transform them to normality. However, the exact transformation might be difficult to identify. George Box and Sir David Cox developed an algorithm back in the 1960's to assist in identifying \"power\" transformations to make a variable normally distributed (think...\"what power should I raise this variable to?\"). Their algorithm tries out different values of $\\lambda$ or powers of the response variable in the following way:\\\n\n$$y = \\begin{array}\n{rr}\n\\frac{y^{\\lambda}-1}{\\lambda} & if \\lambda \\ne 0  \\\\\nlog(y) & if \\lambda = 0 \n\\end{array}$$\n\n**Example**\n\nUsing the residuls from the originally salary data, we can take a look at the box-cox transformation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm.var=lm(salary~years)\n\nboxcox(lm.var)\n```\n\n::: {.cell-output-display}\n![](05-diagnostics_files/figure-html/boxcox-1.png){width=672}\n:::\n:::\n\n\nThe output from the graph clearly incates that $\\lambda$ should be 0, which indicates a log transform.\n\nIn conclusion, to deal with data that is NOT normally distributed, we can either\\\n1. Use a robust regression (quantile regression or nonparametric)\\\n2. Transform either response or predictor variables or both to obtain normality in the residuals.\\\n\n## Correlated Errors\n\nAnother important assumption is that the observations are independent. There are a couple of ways in which we assess this assumtpion:\\\n\n1.  Experimental design or collection of data\\\n2.  Explore residual plots\\\n\nDepending on how the data was collected or the experimental design, there could be potential correlation in the observations. For example, if the data collected information on multiple family members (include husband and wife and kids). Or if multiple observations were collected on the same subject. There are various models that exists that can account for this dependence (longitudinal analysis, hierarchical models, etc). However, this type of analysis will be covered later throughout the year. There is no diagnostic measures to indicate this correlation structure. Your best way of knowing it is there is to know the experimental design or collection of data.  We will focus our attention on a form of dependence that is evident from the residual plots, which is autocorrelation. This happens when ordered observations are dependent on prior observations. One of the most common instances of this correlation structure is through data that is collected over time, also referred to as time series. You will learn more about time series data in the Fall semester, but for now, let's explore how to recognize if it is an issue in the analysis. To diagnose autocorrelation in data, you can\\\n\n1.  Visually inspect the plot of residuals by time (see a pattern over time...usually cyclical)\\\n2.  Conduct a Durbin-Watson test\\\n\nIn visually inspecting a plot of residuals across time, you would expect to see a type of cyclical pattern if autocorrelation exists as it does in Figure @fig-autoplot.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n::: {.cell-output-display}\n![Residuals vs Time: Autocorrelation Present](05-diagnostics_files/figure-html/fig-autoplot-1.png){#fig-autoplot fig-align='center' width=672}\n:::\n:::\n\n\nIn using the Durbin-Watson test, the hypotheses are:\\\n$H_{0}:$ No residual correlation\\\n$H_{A}:$ Residual Correlation\\\n\nThe Durbin-Watson test statistic is calculated by\n\n$$ d=\\frac{\\sum_{t=2}^T(e_{t}-e_{t-1})^2}{\\sum_{t=1}^T e_{t}^2}$$ where $e$ represents the error terms, or residuals. The statistic *d* ranges from 0 to 4, with a value of 2 indicating no residual correlation. Values of *d* smaller than 2 may indicate a positive autocorrelation and a value of *d* larger than 2 may indicate a negative autocorrelation. However, the question becomes when is it \"significantly different\" than 2? Unless there is good reason to assume a negative autocorrelation, testing for positive autocorrelation would be the preferred test. The Durbin-Watson test is in the lmtest package of R. If you want to test for positive autocorrelation, you will need to specify the alternative of \"greater\" (even though the test statistic is testing for a value LESS than 2!!).\\\n\n**Example** The following data set illustrates this test using the Google data set in the TSA package (returns of Google stock from 08/20/04 - 09/13/06).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(google)\nx=seq(1,length(google))\nlm.model=lm(google~x)\ndwtest(lm.model,alternative=\"greater\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDurbin-Watson test\n\ndata:  lm.model\nDW = 1.842, p-value = 0.0321\nalternative hypothesis: true autocorrelation is greater than 0\n```\n:::\n:::\n\n\nIn running this test, you either need to have the data sorted by the correct date (it assumes the observations are correctly ordered by time). If they are not, there is an order.by option in which you can use. For this example, the p-value is 0.0321, which if we use an $\\alpha$ of 0.05, we would reject the null hypothesis and conclude there appears to be significant positive autocorrelation.\n\nIf your data has significant autocorrelation, then the error terms will not be correct. We will discuss in the Fall semester how to model time series data appropriately.\n\n## Influential Observations and Outliers\n\nInfluential points and outliers play a large role in the estimation of the model and its prediction. Influential points are usually those points on the edges of the x-values and can greatly impact the slopes in the regression equation. Outliers tend to be those values that do not follow the trend of the data and are generally found by large deviations in the y direction. For multiple linear regression, outliers are found by using residuals. These can be standardize residuals or studentized residuals. Influential points can be discovered by Cook's D, dffits, dfbetas or Hat values. These points are important to identify and recognize their influence on the regression, however, it does NOT mean that these points should be removed. Removal of data should be taken very seriously. We would obviously want to omit any observations made in error, due to typos or reporting inaccuracies, but we do not remove data points just because they are outside the scope of our expectations. We have many tools at our disposal for modeling with such observations, and we should always develop a deep understanding of the application-specific risks and rewards associated with data removal.\\\n\nIn the this section we will cover the following statistics to help us detect outliers and influential observations respectively.\n\n*Outliers*\\\nrstandard\\\nrstudent\\\n*Influential observations*\\\ndffits\\\ndfbetas\\\ncooks.distance\\\nhatvalues\\\n\n*Outliers*\\\nIn using residuals to detect outliers, we first need to \"standardize\" them, or divide by their standard errors. In this sense, we can think of these \"standardized\" residuals as an approximate z-score. Therefore, we look for residuals greater in magnitude than 3 as potential outliers. R calculates two different types of standardized residuals: 1. internally studentized residuals and 2. externally studentized residuals. Internally studentized residuals are definied as $$ r_{i}=\\frac{e_{i}}{\\hat\\sigma\\sqrt{1-H_{ii}}},$$ where $\\hat\\sigma$ is the square root of the MSE and $H_{ii}$ is from the diagonal of the hat matrix (hat matrix will be discussed in influential observations). In R, these are denoted by rstandard. Externally studentized residuals are definied as $$ t_{i}=\\frac{e_{i}}{\\hat\\sigma_{(i)}\\sqrt{1-H_{ii}}},$$ where $\\hat\\sigma_{(i)}$ is the square root of the MSE calculated when observation *i* is deleted and $H_{ii}$ is from the diagonal of the hat matrix. The externally studentized residuals follow a t-distribution with $n-k-2$, where $k$ is the number of explanatory variables(notice that this has one less degree of freedom than the usual error in regression which is due to the one deleted observation). The R code to obtain externally studentized residuals is rstudent.\n\n*Influential observations*\\\nInfluential observations are observations that can dramatically change the model's estimates. It is important to identify and understand these where these observations are. There are a number of different measures to aid in identifying influential observations, which will be discussed below.\n\nCook's distance, also referred to as Cook's D, measures the difference in the regression estimates when the $i^{th}$ observation is left out. A rough rule of thumb used as a cutoff is if $D_{i}$ is greater than $\\frac{4}{n-p-1}$.\n\nDffits calculates the difference of fitted values for each point in the regression versus the fit of the regression line for that point if it was removed. Large values of dffits indicate that the point is influential in the calculation of the estimated regression line. As a general rule of thumb, a cutoff of $2\\sqrt{(p+1)/n}$ is used to identify potential influential points.\\\nDfbetas follows the same idea as dffits. The difference in the estimated betas is calculated for each observation (observation included in the estimated beta and observation NOT included in estimating the beta). This is done for each individual observation and each estimated beta. For small data sets, a value greater than 1 is suspect of an influential observation. For large data sets, the cutoff is $\\frac{2}{\\sqrt{n}}$.\\\nThe hat values $H_{ii}$ are the diagonal values of $$\\boldsymbol{X(X^{T}X)^{-1.}X^{T}}.$$ Hat values can identify high leverage points in a regression. A general rule of thumb are hat values greater than $\\frac{2(p+1)}{n}$.\n\n**Example** We will use the Scottish hill races as an example to illustrate how to calculate and visualize these values. The Scottish hill races include the following variables:\\\nTime: Record time to complete course\\\nDistance: Distance in the course\\\nClimb: Vertical climb in the course\\\n\n\n::: {.cell layout-align=\"center\" ='{}' fig='true'}\n\n```{.r .cell-code}\nurl = 'http://www.statsci.org/data/general/hills.txt' \nraces.table = read.table(url, header=TRUE, sep='\\t')\nn.index=seq(1,nrow(races.table))\nraces.table=cbind(races.table,n.index)\nlm.model=lm(Time~Distance+Climb,data=races.table)\n\n\n##Plots of outliers\na = ggplot(lm.model,aes(x=n.index,y=rstandard(lm.model)))+geom_point(color=\"orange\")+geom_line(y=-3)+geom_line(y=3)+labs(title = \"Internal Studentized Residuals\",x=\"Observation\",y=\"Residuals\")\n\nb = ggplot(lm.model,aes(x=n.index,y=rstudent(lm.model)))+geom_point(color=\"orange\")+geom_line(y=-3)+geom_line(y=3)+labs(title = \"External Studentized Residuals\",x=\"Observation\",y=\"Residuals\")\n\n##Influential points\nc = ggplot(lm.model,aes(x=n.index,y=rstandard(lm.model)))+geom_point(color=\"orange\")+geom_line(y=-3)+geom_line(y=3)+labs(title = \"Internal Studentized Residuals\",x=\"Observation\",y=\"Residuals\")\n\n##Cook's D\nD.cut=4/(nrow(races.table)-3-1)\n\nd =ggplot(lm.model,aes(x=n.index,y=cooks.distance(lm.model)))+geom_point(color=\"orange\")+geom_line(y=D.cut)+labs(title = \"Cook's D\",x=\"Observation\",y=\"Cook's Distance\")\n\n##Dffit\ndf.cut=2*(sqrt((3+1)/nrow(races.table)))\n\ne =ggplot(lm.model,aes(x=n.index,y=dffits(lm.model)))+geom_point(color=\"orange\")+geom_line(y=df.cut)+geom_line(y=-df.cut)+labs(title = \"DFFITS\",x=\"Observation\",y=\"DFFITS\")\n\ndb.cut=2/sqrt(nrow(races.table))\n\n\nf =ggplot(lm.model,aes(x=n.index,y=dfbetas(lm.model)[,'Climb']))+geom_point(color=\"orange\")+geom_line(y=db.cut)+geom_line(y=-db.cut)+labs(title = \"DFBETA for Climb\",x=\"Observation\",y=\"DFBETAS\")\n\ng =ggplot(lm.model,aes(x=n.index,y=dfbetas(lm.model)[,'Distance']))+geom_point(color=\"orange\")+geom_line(y=db.cut)+geom_line(y=-db.cut)+labs(title = \"DFBETA for Distance\",x=\"Observation\",y=\"DFBETAS\")\n\n##Hat\nhat.cut=2*(3+1)/nrow(races.table)\n\nh = ggplot(lm.model,aes(x=n.index,y=hatvalues(lm.model)))+geom_point(color=\"orange\")+geom_line(y=hat.cut)+labs(title = \"Hat values\",x=\"Observation\",y=\"Hat Values\")\n\ngrid.arrange(a,b,c,d,e,f,g,ncol=2)\n```\n\n::: {.cell-output-display}\n![Plots for Exploring Outliers and Influential Points](05-diagnostics_files/figure-html/fig-influence-1.png){#fig-influence fig-align='center' width=672}\n:::\n:::\n\n\nFigure @fig-influence shows a number of useful graphics that help us explore outliers and influential points.\n\nA good graph to explore is looking at the external studentized residuals versus the hat values. An observation that is high leverage AND an outlier is one that needs to be explored.\n\n\n::: {.cell layout-align=\"center\" fig='true'}\n\n```{.r .cell-code}\nggplot(lm.model,aes(x=hatvalues(lm.model),y=rstudent(lm.model))) +  geom_point(color=\"orange\")+ labs(x=\"Hat values\",y=\"Residuals\")\n```\n\n::: {.cell-output-display}\n![Influential and Outlier Observations](05-diagnostics_files/figure-html/influenceresid-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Multicollinearity\n\nMulticollinearity occurs when one or more predictor variables are linearly related to each other and will create issues with the regression. The parameter estimates will not be stable and the standard errors will be inflated (making it more difficult to find significant explantory variables). The two most common ways to identify multicollinearity is by looking at the correlation among the predictor variables and calculating the variance inflation factor.\n\nThe variance inflation factor (also referred to as VIF) will take each explanatory variable and model it as a linear regression of the remaining explanatory variables. For example, let's say we have the following regression equation:\\\n$$\\widehat{Y}_{i}=b_{0} + b_{1}x_{1}+ b_{2}x_{2}+ b_{3}x_{3}.$$ There are only 3 explanatory variables in this regression. A VIF will be calculated on each $x_{i}$ in the following manner:\n\n1.  A regression is fit on each $x_{i}$ with the remaining $x_{i}$'s as the explanatory variables. For example, to calculate the VIF for $x_{1}$, we fit the following model:\\\n    $$\\widehat{x}_{1}=b_{0} + b_{1}x_{2}+ b_{2}x_{3},$$ and obtain the $R^2$ value from this model (call it $R_{1}^2$).\\\n2.  The VIF for $x_{1}$ is calculated by $$VIF=\\frac{1}{1-R_{1}^2}.$$ Repeat this process for each of the other explanatory variables. If a VIF value is larger than 10, then we say that multicollinearity is an issue.\n\n**Example**\n\nWe will use the mtcars data set dealing with fuel consumption and automobile design. The data set consists of the following variables:\n\nA data frame with 32 observations on 11 (numeric) variables.\n\nmpg: Miles/(US) gallon\\\ncyl: Number of cylinders\\\ndisp: Displacement (cu.in.)\\\nhp: Gross horsepower\\\ndrat: Rear axle ratio\\\nwt: Weight (1000 lbs)\\\nqsec: 1/4 mile time\\\nvs: Engine (0 = V-shaped, 1 = straight)\\\nam: Transmission (0 = automatic, 1 = manual)\\\ngear: Number of forward gears\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(mtcars)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            mpg        cyl       disp         hp        drat         wt\nmpg   1.0000000 -0.8521620 -0.8475514 -0.7761684  0.68117191 -0.8676594\ncyl  -0.8521620  1.0000000  0.9020329  0.8324475 -0.69993811  0.7824958\ndisp -0.8475514  0.9020329  1.0000000  0.7909486 -0.71021393  0.8879799\nhp   -0.7761684  0.8324475  0.7909486  1.0000000 -0.44875912  0.6587479\ndrat  0.6811719 -0.6999381 -0.7102139 -0.4487591  1.00000000 -0.7124406\nwt   -0.8676594  0.7824958  0.8879799  0.6587479 -0.71244065  1.0000000\nqsec  0.4186840 -0.5912421 -0.4336979 -0.7082234  0.09120476 -0.1747159\nvs    0.6640389 -0.8108118 -0.7104159 -0.7230967  0.44027846 -0.5549157\nam    0.5998324 -0.5226070 -0.5912270 -0.2432043  0.71271113 -0.6924953\ngear  0.4802848 -0.4926866 -0.5555692 -0.1257043  0.69961013 -0.5832870\ncarb -0.5509251  0.5269883  0.3949769  0.7498125 -0.09078980  0.4276059\n            qsec         vs          am       gear        carb\nmpg   0.41868403  0.6640389  0.59983243  0.4802848 -0.55092507\ncyl  -0.59124207 -0.8108118 -0.52260705 -0.4926866  0.52698829\ndisp -0.43369788 -0.7104159 -0.59122704 -0.5555692  0.39497686\nhp   -0.70822339 -0.7230967 -0.24320426 -0.1257043  0.74981247\ndrat  0.09120476  0.4402785  0.71271113  0.6996101 -0.09078980\nwt   -0.17471588 -0.5549157 -0.69249526 -0.5832870  0.42760594\nqsec  1.00000000  0.7445354 -0.22986086 -0.2126822 -0.65624923\nvs    0.74453544  1.0000000  0.16834512  0.2060233 -0.56960714\nam   -0.22986086  0.1683451  1.00000000  0.7940588  0.05753435\ngear -0.21268223  0.2060233  0.79405876  1.0000000  0.27407284\ncarb -0.65624923 -0.5696071  0.05753435  0.2740728  1.00000000\n```\n:::\n\n```{.r .cell-code}\nlm.model=lm(mpg~.,data=mtcars)\nvif(lm.model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      cyl      disp        hp      drat        wt      qsec        vs        am \n15.373833 21.620241  9.832037  3.374620 15.164887  7.527958  4.965873  4.648487 \n     gear      carb \n 5.357452  7.908747 \n```\n:::\n:::\n\n\nFrom the correlation output and VIF output, it is clear that multicollinearity is an issue. To deal with multicollinearity, we can do either of the following:\n\n1.  Remove one or more variables that are co-linearly related to another variable(s).\\\n2.  Create new transformed variables (take linear combinations of variables; create ratio of variables, etc).\n",
    "supporting": [
      "05-diagnostics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}